# Gin Framework Configuration
GIN_MODE=debug # Use "release" for production
PORT=8080

# Session Management
SESSION_SECRET_KEY=your-very-secret-key # CHANGE THIS IN PRODUCTION! Use a long, random string.

# OIDC Configuration (Dex example)
OIDC_ISSUER_URL=http://127.0.0.1:5556/dex
OIDC_CLIENT_ID=pgweb-frontend
OIDC_CLIENT_SECRET=your-client-secret # This should match the secret in your OIDC provider for this client
OIDC_REDIRECT_URL=http://localhost:8080/auth/oidc/callback # Adjust if your backend runs on a different host/port

# Application Database (PostgreSQL)
# This DSN is used by the backend to connect to its own metadata database.
APP_DB_DSN=postgres://your_app_user:your_app_password@postgres:5432/your_app_db?sslmode=disable

# PostgreSQL Admin Connection (for provisioning new databases and users)
# This DSN should connect to PostgreSQL with superuser-like privileges (e.g., to the 'postgres' database or a dedicated admin DB).
# It's used by the backend to perform CREATE DATABASE, CREATE USER, GRANT, etc.
PG_ADMIN_DSN=postgres://admin_user:admin_password@postgres:5432/postgres?sslmode=disable # Or your admin_db

# Frontend Configuration (used by backend for redirects, etc.)
FRONTEND_BASE_URL=http://localhost:5173 # Base URL of your frontend application

# Example for enabling specific SSL modes for PG connections if not in DSN:
# PGSSLMODE=require # or verify-ca, verify-full etc. (used by lib/pq if DSN doesn't specify)
