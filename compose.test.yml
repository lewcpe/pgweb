services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: pgweb_test_postgres
    environment:
      POSTGRES_USER: test_admin
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_admin_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_admin -d test_admin_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    image: ${BACKEND_IMAGE:-pgweb/pgweb-backend-test}
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pgweb_test_backend
    environment:
      PG_ADMIN_DSN: "postgres://test_admin:test_password@postgres:5432/test_admin_db?sslmode=disable"
      APP_DB_DSN: "postgres://test_admin:test_password@postgres:5432/test_admin_db?sslmode=disable"
      GIN_MODE: "release"
      SESSION_SECRET_KEY: "test-session-secret"
      PGWEB_TRUSTED_HEADER: "X-Forwarded-Email" # Add this line
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pgweb_frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost/api
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: pgweb_dev_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

  backend-tests:
    container_name: pgweb_test_backend_tests
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    environment:
      PG_ADMIN_DSN: "postgres://test_admin:test_password@postgres:5432/test_admin_db?sslmode=disable"
      PG_HOST: "postgres"
    depends_on:
      cypress:
        condition: service_completed_successfully

  cypress:
    image: cypress/included:12.17.0
    container_name: pgweb_test_cypress
    environment:
      CYPRESS_BASE_URL: "http://nginx"
    working_dir: /e2e
    volumes:
      - ./tests/:/e2e
    depends_on:
      frontend:
        condition: service_started
    command: --config-file cypress.config.js

    
