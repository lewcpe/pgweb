version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16 # Or your preferred PostgreSQL version with pgvector
    container_name: pgweb_postgres
    environment:
      POSTGRES_USER: admin_user # Admin user for the instance
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: admin_db # Initial admin database
    ports:
      - "5432:5432"
    volumes:
      - pgweb_data:/var/lib/postgresql/data
    restart: unless-stopped

  dex:
    image: ghcr.io/dexidp/dex:latest-distroless
    container_name: pgweb_dex
    ports:
      - "5556:5556" # HTTP
      - "5557:5557" # gRPC
      - "5558:5558" # Metrics
    volumes:
      - ./dex_config.yml:/etc/dex/config.docker.yaml:ro
    restart: unless-stopped

  backend:
    build:
      context: ./backend # Assuming backend code is in a 'backend' subdirectory
      dockerfile: Dockerfile
    container_name: pgweb_backend
    ports:
      - "8080:8080"
    environment:
      # For connecting to PostgreSQL as admin to manage databases/users
      PG_ADMIN_DSN: "postgres://admin_user:admin_password@postgres:5432/admin_db?sslmode=disable"
      # For connecting to the application's own metadata tables (if separate or different user)
      # APP_DB_DSN: "postgres://app_user:app_password@postgres:5432/app_metadata_db?sslmode=disable"
      OIDC_ISSUER_URL: "http://dex:5556/dex" # Internal Docker network hostname
      OIDC_CLIENT_ID: "pgweb-frontend"
      OIDC_CLIENT_SECRET: "your-client-secret" # Should be a strong secret
      OIDC_REDIRECT_URL: "http://localhost:8080/auth/callback"
      GIN_MODE: "debug" # or "release"
      APP_DB_DSN: "postgres://admin_user:admin_password@postgres:5432/admin_db?sslmode=disable"
      SESSION_SECRET_KEY: "local-session-secret"
    depends_on:
      - postgres
      - dex
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pgweb_frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgweb_data:
