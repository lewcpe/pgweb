name: CI Pipeline

permissions:
  contents: read
  packages: write # Added packages permission for push to GHCR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push_backend:
    runs-on: ubuntu-latest
    permissions: # Permissions for writing to GHCR (already present in original build file)
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(echo ${GITHUB_SHA::7})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/pgweb-backend:latest
            ghcr.io/${{ github.repository_owner }}/pgweb-backend:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_and_push_frontend:
    runs-on: ubuntu-latest
    permissions: # Permissions for writing to GHCR (already present in original build file)
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(echo ${GITHUB_SHA::7})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/pgweb-frontend:latest
            ghcr.io/${{ github.repository_owner }}/pgweb-frontend:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: [build_and_push_backend, build_and_push_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(echo ${GITHUB_SHA::7})" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set image names
        run: |
          echo "BACKEND_IMAGE=ghcr.io/${{ github.repository_owner }}/pgweb-backend:latest" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=ghcr.io/${{ github.repository_owner }}/pgweb-frontend:latest" >> $GITHUB_ENV

      - name: Pull images
        run: |
          docker pull ${{ env.BACKEND_IMAGE }}
          docker pull ${{ env.FRONTEND_IMAGE }}

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Run tests
        env:
          BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }} # This will now use 'latest'
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }} # This will now use 'latest'
        run: docker-compose -f compose.test.yml up --exit-code-from cypress
